package dev.deadzone.core.model.game.data

import kotlinx.serialization.Serializable

@Serializable
data class MissionStats(
    val zombieSpawned: Int = 0,
    val levelUps: Int = 0,
    val damageOutput: Double = 0.0,
    val damageTaken: Double = 0.0,
    val containersSearched: Int = 0,
    val survivorKills: Int = 0,
    val survivorsDowned: Int = 0,
    val survivorExplosiveKills: Int = 0,
    val humanKills: Int = 0,
    val humanExplosiveKills: Int = 0,
    val zombieKills: Int = 0,
    val zombieExplosiveKills: Int = 0,
    val hpHealed: Int = 0,
    val explosivesPlaced: Int = 0,
    val grenadesThrown: Int = 0,
    val grenadesSmokeThrown: Int = 0,
    val allianceFlagCaptured: Int = 0,
    val buildingsDestroyed: Int = 0,
    val buildingsLost: Int = 0,
    val buildingsExplosiveDestroyed: Int = 0,
    val trapsTriggered: Int = 0,
    val trapDisarmTriggered: Int = 0,
    val cashFound: Int = 0,
    val woodFound: Int = 0,
    val metalFound: Int = 0,
    val clothFound: Int = 0,
    val foodFound: Int = 0,
    val waterFound: Int = 0,
    val ammunitionFound: Int = 0,
    val ammunitionUsed: Int = 0,
    val weaponsFound: Int = 0,
    val gearFound: Int = 0,
    val junkFound: Int = 0,
    val medicalFound: Int = 0,
    val craftingFound: Int = 0,
    val researchFound: Int = 0,
    val researchNoteFound: Int = 0,
    val clothingFound: Int = 0,
    val cratesFound: Int = 0,
    val schematicsFound: Int = 0,
    val effectFound: Int = 0,
    val rareWeaponFound: Int = 0,
    val rareGearFound: Int = 0,
    val uniqueWeaponFound: Int = 0,
    val uniqueGearFound: Int = 0,
    val greyWeaponFound: Int = 0,
    val greyGearFound: Int = 0,
    val whiteWeaponFound: Int = 0,
    val whiteGearFound: Int = 0,
    val greenWeaponFound: Int = 0,
    val greenGearFound: Int = 0,
    val blueWeaponFound: Int = 0,
    val blueGearFound: Int = 0,
    val purpleWeaponFound: Int = 0,
    val purpleGearFound: Int = 0,
    val premiumWeaponFound: Int = 0,
    val premiumGearFound: Int = 0,
    val killData: Map<String, Int> = mapOf(),
    val customData: Map<String, Int> = mapOf()
)
